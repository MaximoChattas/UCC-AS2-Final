version: '3'

services:
  sqldatabase:
    build: ./User-Reservation-api/MySQL Database
    environment:
      MYSQL_DATABASE: user-reservation
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_TCP_PORT: 3307
    ports:
      - "3307:3306"
    expose:
      - 3307
    volumes:
      - ./User-Reservation-api/MySQL Database:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root"]
      timeout: 20s
      retries: 10

  user-reservation:
    build: ./User-Reservation-api/Backend
    depends_on:
      sqldatabase:
        condition: service_healthy
    ports:
      - "8090:8090"

  mongodatabase:
    build: ./Hotel-api/Mongodb Database 
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      timeout: 20s
      retries: 10

  hotel:
    build: ./Hotel-api/Backend
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodatabase:
        condition: service_started
    ports:
      - "8080:8080"

  solr:
    image: solr:8
    ports:
      - "8983:8983"
    entrypoint:
      - "bash"
      - "-c"
      - "precreate-core hotels; exec solr -f"

  search:
    build: ./Search-api
    depends_on:
      rabbitmq:
        condition: service_healthy
      solr:
        condition: service_started
    ports:
      - "8085:8085"

  # init-mongo:
  #   image: node:14
  #   volumes:
  #     - ./path/to/your/js/file:/app/init.js
  #     - ./path/to/your/json/file:/app/init.json
  #   depends_on:
  #     - mongodatabase
  #   command: ["node", "/app/init.js"]
